<?xml version="1.0" encoding="UTF-8" ?>
<!-- /**
 * 
 * @author 최진실
 *
 */ -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="test.com.rence">
  	
  	<select id="SQL_SELECT_BACKOFFICE_EMAIL" resultType="test.com.rence.backoffice.BackOfficeVO">
  	SELECT * from backofficeinfo where backoffice_email=#{backoffice_email} and backoffice_state !='X'
  	</select>

	<insert id="SQL_INSERT_BACKOFFICE_AUTH" parameterType="test.com.rence.sendemail.AuthVO">
  	INSERT INTO auth(auth_no, user_email, auth_code) values('A'||seq_auth.nextval, #{user_email}, #{auth_code})
  	</insert>
  	
  	<select id="SQL_SELECT_BACKOFFICE_AUTH" resultType="test.com.rence.sendemail.AuthVO">
  	SELECT auth_no, auth_code, user_email from (SELECT auth_no, auth_code, user_email from auth where user_email=#{user_email} order by rownum desc) where rownum = 1
  	</select>
  	
  	<select id="SQL_SELECT_BACKOFFICE_AUTHOK" resultType="test.com.rence.sendemail.AuthVO">
  	SELECT * from (SELECT * from (SELECT * from auth where user_email=#{backoffice_email} order by rownum desc) where rownum = 1) where auth_code=#{auth_code} and user_email=#{backoffice_email} 
  	</select>
  	
  	<delete id="SQL_DELETE_BACKOFFICE_AUTH" parameterType="test.com.rence.sendemail.AuthVO">
  	DELETE FROM auth where auth_no = #{auth_no}
  	</delete>
  
   	<insert id="SQL_INSERT_BACKOFFICE" parameterType="test.com.rence.backoffice.BackOfficeVO">
  	INSERT INTO backofficeinfo(backoffice_no, owner_name, backoffice_id, backoffice_name, company_name, backoffice_tel, backoffice_email,zipcode, roadname_address, number_address, detail_address, backoffice_tag, backoffice_info, backoffice_option, backoffice_around, backoffice_image, backoffice_state, backoffice_type) 
  	values('B'||seq_backoffice.nextval, #{owner_name}, #{backoffice_id}, #{backoffice_name}, #{company_name}, #{backoffice_tel},#{backoffice_email},#{zipcode},#{roadname_address},#{number_address},#{detail_address},#{backoffice_tag,jdbcType=VARCHAR},#{backoffice_info},#{backoffice_option,jdbcType=VARCHAR},#{backoffice_around,jdbcType=VARCHAR},#{backoffice_image},'W',#{backoffice_type})
	</insert>
	
	<select id="SQL_SELECT_BACKOFFICE_NO" resultType="test.com.rence.backoffice.BackOfficeVO">
  	SELECT * from backofficeinfo where backoffice_email=#{backoffice_email} and backoffice_state !='X'
  	</select>
	
   	<insert id="SQL_INSERT_OPERRATING_TIME" parameterType="test.com.rence.backoffice.BackOfficeOperatingTimeVO_datetype">
  	INSERT INTO BACKOFFICEOPERATINGTIME(opetime_no, mon_stime, mon_etime, tue_stime, tue_etime, wed_stime, wed_etime, thu_stime, thu_etime, fri_stime, fri_etime, sat_stime, sat_etime, sun_stime, sun_etime, sun_dayoff, mon_dayoff, tue_dayoff, wed_dayoff, thu_dayoff, fri_dayoff, sat_dayoff, backoffice_no) 
  	values('O'||SEQ_BACKOFFICEOPERATINGTIME.nextval, #{mon_stime,jdbcType=TIMESTAMP}, #{mon_etime,jdbcType=TIMESTAMP}, #{tue_stime,jdbcType=TIMESTAMP}, #{tue_etime,jdbcType=TIMESTAMP}, #{wed_stime,jdbcType=TIMESTAMP},#{wed_etime,jdbcType=TIMESTAMP},#{thu_stime,jdbcType=TIMESTAMP},#{thu_etime,jdbcType=TIMESTAMP},#{fri_stime,jdbcType=TIMESTAMP},#{fri_etime,jdbcType=TIMESTAMP},#{sat_stime,jdbcType=TIMESTAMP},#{sat_etime,jdbcType=TIMESTAMP},#{sun_stime,jdbcType=TIMESTAMP},#{sun_etime,jdbcType=TIMESTAMP},#{sun_dayoff},#{mon_dayoff},#{tue_dayoff},#{wed_dayoff},#{thu_dayoff},#{fri_dayoff},#{sat_dayoff},#{backoffice_no})
	</insert>
	
	<select id="SQL_BACKOFFICE_LOGIN" resultType="test.com.rence.backoffice.BackOfficeVO">
  	select * from backofficeinfo where backoffice_id=#{backoffice_id} and backoffice_pw=#{backoffice_pw} and (backoffice_state='Y' or backoffice_state='O')
  	</select>
  	
	<select id="SQL_SELECT_BACKOFFICE_ID_EMAIL" resultType="test.com.rence.backoffice.BackOfficeVO">
  	select * from backofficeinfo where backoffice_id=#{backoffice_id} and backoffice_email=#{backoffice_email} and backoffice_state !='X'
  	</select>
  	
  	<update id="SQL_UPDATE_BACKOFFICE_SETTINGOK_PW" parameterType="test.com.rence.backoffice.BackOfficeVO">
  	UPDATE backofficeinfo SET backoffice_pw=#{backoffice_pw} where backoffice_no=#{backoffice_no}
  	</update>
  	
  	<select id="SQL_SELECTONE_BACKOFFICE_SETTING" resultType="test.com.rence.backoffice.BackOfficeVO">
  	SELECT * from backofficeinfo where backoffice_no=#{backoffice_no}
  	</select>
  	
  	<select id="SQL_SELECT_BACKOFFICE_PW" resultType="test.com.rence.backoffice.BackOfficeVO">
  	SELECT * from backofficeinfo where backoffice_no=#{backoffice_no} and backoffice_pw=#{backoffice_pw}
  	</select>
  	
  	<update id="SQL_UPDATE_BACKOFFICE_SETTING_O" parameterType="test.com.rence.backoffice.BackOfficeVO">
  	UPDATE backofficeinfo SET backoffice_state='O',apply_date=sysdate where backoffice_no=#{backoffice_no} and backoffice_no not in (select backoffice_no from reserveinfo where backoffice_no=#{backoffice_no} and (reserve_state='begin' or reserve_state='in_use'))
  	</update>
  	
  
</mapper>
